package com.snakehunter.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Insets;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.TitledBorder;

public class LoginView {

    private JFrame jFrame = new JFrame("Login");
    private JPanel mainPanel;
    private JLabel usernameLabel;
    private JLabel passwordLabel;
    private JTextField usernameTxtF;
    private JPasswordField passwordTxtF;
    private JPanel buttonPanel;
    private JButton loginButton;
    private JButton newAccountButton;
    private JLabel humanPlayerLabel;
    private JLabel snakePlayerLabel;
    private JLabel loginMessages;

    public LoginView() {
        jFrame.setContentPane(mainPanel);
        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jFrame.pack();
        jFrame.setLocationRelativeTo(null);
        jFrame.setResizable(false);
        jFrame.setVisible(true);

        loginMessages.setForeground(Color.RED);
    }

    public JFrame getjFrame() {
        return jFrame;
    }

    public JTextField getUsernameTxtF() {
        return usernameTxtF;
    }

    public JPasswordField getPasswordTxtF() {
        return passwordTxtF;
    }

    public JLabel getLoginMessages() {
        return loginMessages;
    }

    public JButton getLoginButton() {
        return loginButton;
    }

    public JButton getNewAccountButton() {
        return newAccountButton;
    }

    public JLabel getHumanPlayerLabel() {
        return humanPlayerLabel;
    }

    public JLabel getSnakePlayerLabel() {
        return snakePlayerLabel;
    }

    public void setUsernameTxtF(String username) {
        usernameTxtF.setText(username);
    }

    public void setPasswordTxtF(String password) {
        passwordTxtF.setText(password);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 2, new Insets(10, 10, 10, 10), -1, -1));
        mainPanel.setMaximumSize(new Dimension(-1, -1));
        mainPanel.setMinimumSize(new Dimension(-1, -1));
        mainPanel.setPreferredSize(new Dimension(500, 220));
        mainPanel.setBorder(BorderFactory.createTitledBorder(null, "Snake Hunting", TitledBorder.CENTER,
                                                             TitledBorder.BELOW_TOP,
                                                             this.$$$getFont$$$("Courgette", Font.BOLD, 28,
                                                                                mainPanel.getFont()),
                                                             new Color(-16777216)));
        usernameLabel = new JLabel();
        Font usernameLabelFont = this.$$$getFont$$$(null, Font.BOLD, 16, usernameLabel.getFont());
        if (usernameLabelFont != null) {
            usernameLabel.setFont(usernameLabelFont);
        }
        usernameLabel.setText("Username");
        mainPanel.add(usernameLabel,
                      new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(-1, 25), null, 0, false));
        passwordLabel = new JLabel();
        Font passwordLabelFont = this.$$$getFont$$$(null, Font.BOLD, 16, passwordLabel.getFont());
        if (passwordLabelFont != null) {
            passwordLabel.setFont(passwordLabelFont);
        }
        passwordLabel.setText("Password");
        mainPanel.add(passwordLabel,
                      new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(-1, 25), null, 0, false));
        usernameTxtF = new JTextField();
        usernameTxtF.setColumns(1);
        usernameTxtF.setFocusCycleRoot(false);
        usernameTxtF.setFocusTraversalPolicyProvider(false);
        Font usernameTxtFFont = this.$$$getFont$$$(null, -1, 14, usernameTxtF.getFont());
        if (usernameTxtFFont != null) {
            usernameTxtF.setFont(usernameTxtFFont);
        }
        mainPanel.add(usernameTxtF,
                      new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(180, 25), null, 0, false));
        loginMessages = new JLabel();
        loginMessages.setEnabled(true);
        loginMessages.setFocusable(false);
        loginMessages.setText("");
        loginMessages.setVisible(true);
        mainPanel.add(loginMessages,
                      new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(100, 15), null, 0, false));
        passwordTxtF = new JPasswordField();
        passwordTxtF.setColumns(1);
        passwordTxtF.setFocusTraversalPolicyProvider(false);
        Font passwordTxtFFont = this.$$$getFont$$$(null, -1, 14, passwordTxtF.getFont());
        if (passwordTxtFFont != null) {
            passwordTxtF.setFont(passwordTxtFFont);
        }
        mainPanel.add(passwordTxtF,
                      new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(180, 25), null, 0, false));
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new BorderLayout(0, 0));
        mainPanel.add(buttonPanel,
                      new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                                          GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                                          null, new Dimension(225, 15), null, 0, false));
        newAccountButton = new JButton();
        Font newAccountButtonFont = this.$$$getFont$$$(null, -1, 14, newAccountButton.getFont());
        if (newAccountButtonFont != null) {
            newAccountButton.setFont(newAccountButtonFont);
        }
        newAccountButton.setPreferredSize(new Dimension(125, 15));
        newAccountButton.setText("New Account");
        buttonPanel.add(newAccountButton, BorderLayout.EAST);
        loginButton = new JButton();
        Font loginButtonFont = this.$$$getFont$$$(null, -1, 14, loginButton.getFont());
        if (loginButtonFont != null) {
            loginButton.setFont(loginButtonFont);
        }
        loginButton.setPreferredSize(new Dimension(75, 15));
        loginButton.setText("Login");
        buttonPanel.add(loginButton, BorderLayout.WEST);
        humanPlayerLabel = new JLabel();
        Font humanPlayerLabelFont = this.$$$getFont$$$(null, -1, 18, humanPlayerLabel.getFont());
        if (humanPlayerLabelFont != null) {
            humanPlayerLabel.setFont(humanPlayerLabelFont);
        }
        humanPlayerLabel.setText("Human Player: Waiting");
        mainPanel.add(humanPlayerLabel,
                      new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(150, 25), null, 0, false));
        snakePlayerLabel = new JLabel();
        Font snakePlayerLabelFont = this.$$$getFont$$$(null, -1, 18, snakePlayerLabel.getFont());
        if (snakePlayerLabelFont != null) {
            snakePlayerLabel.setFont(snakePlayerLabelFont);
        }
        snakePlayerLabel.setText("Snake Player: Waiting");
        mainPanel.add(snakePlayerLabel,
                      new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE,
                                          GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null,
                                          new Dimension(150, 25), null, 0, false));
    }

    /** @noinspection ALL */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) {
            return null;
        }
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(),
                        size >= 0 ? size : currentFont.getSize());
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$() { return mainPanel; }

}





